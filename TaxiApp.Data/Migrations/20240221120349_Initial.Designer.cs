// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiApp.Data;

#nullable disable

namespace TaxiApp.Data.Migrations
{
    [DbContext(typeof(TaxiAppDataContext))]
    [Migration("20240221120349_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxiApp.Data.Car", b =>
                {
                    b.Property<int>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCar"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdCar");

                    b.HasAlternateKey("Number");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("TaxiApp.Data.Driver", b =>
                {
                    b.Property<int>("IdDriver")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDriver"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IdDriver");

                    b.HasIndex("LastName", "FirstName", "MiddleName", "BirthDate")
                        .IsUnique()
                        .HasFilter("[MiddleName] IS NOT NULL AND [BirthDate] IS NOT NULL");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("TaxiApp.Data.DriverCar", b =>
                {
                    b.Property<int>("IdDriver")
                        .HasColumnType("int");

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.HasKey("IdDriver", "IdCar");

                    b.HasIndex("IdCar");

                    b.ToTable("DriverCar");
                });

            modelBuilder.Entity("TaxiApp.Data.DriverCar", b =>
                {
                    b.HasOne("TaxiApp.Data.Car", "Car")
                        .WithMany("DriverCar")
                        .HasForeignKey("IdCar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxiApp.Data.Driver", "Driver")
                        .WithMany("DriverCar")
                        .HasForeignKey("IdDriver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("TaxiApp.Data.Car", b =>
                {
                    b.Navigation("DriverCar");
                });

            modelBuilder.Entity("TaxiApp.Data.Driver", b =>
                {
                    b.Navigation("DriverCar");
                });
#pragma warning restore 612, 618
        }
    }
}
